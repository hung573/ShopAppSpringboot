#spring.application.name=ShopApp
server:
  port: 8088
spring:
    datasource:
      url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3307/ShopApp?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true}
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: root
      password: ${MYSQL_ROOT_PASSWORD:HunG1907@}
    jpa:
      show-sql: true
      hibernate:
        ddl-auto: none
      properties:
        hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
    servlet:
        multipart:
            max-file-size: 10MB
            max-request-size: 10MB
#    aop:
#        proxy-target-class:
    flyway:
        locations: classpath:/db/migration, classpath:/dev/db/migration
        baseline-on-migrate: true
        baseline-version: 0
        
    data:
      redis:
        use-redis-cache: false
        host: ${REDIS_HOST:localhost} 
        port: ${REDIS_PORT:6379}  
    
    messages:
      basename: i18n/messages
      encoding: UTF-8
      default-locale: en
      
    kafka:
      bootstrap-servers: ${KAFKA_BROKER_SERVER:localhost}:${KAFKA_BROKER_PORT:9092}

      producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        properties:
          spring.json.type.mapping: 
            order:ShopApp.models.Order,
            category:ShopApp.models.Category

      consumer:
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        properties:
          spring.json.type.mapping: 
            order:ShopApp.models.Order,
            category:ShopApp.models.Category
          spring.json.trusted.packages: "*"
    
    
api:
    prefix: /api/v1
    
jwt:
    # 30day (30*24*60*60)
    expiration: 2592000  
    expiration-refresh-token: 5184000 #60 days = 60 * 24 * 60 * 60
    secretKey: WGBtsEm/cGzeh2xfNitX7F5fTZpCHdy1wp60rTzJOpA=

# swagger-ui custom path
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /api-docs
  show-actuator: true

#health check
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      base-path: /api/v1/actuator
      exposure:
        #include: "health"
        include: "health, info"

email:
    apiKey: 
    
    
